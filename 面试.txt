tbl = {[1] = "a", [2] = "b", [3] = "c", [26] = "z"}
print(#tbl)  --3   因为26和之前的数字不连续, 所以不算在数组部分内
print(table.maxn(tbl)) --26 table.maxn()函数返回指定table中所有正数key值中最大的key值. 如果不存在key值为正数的元素, 则返回0

local t = {1, a = 2, 3}
print(table.getn(t)) --2
========================================

local t = {1,888,x=999,b=2,5,nil,6,7,[10]=1,8,{z = 1,y = 1},nil,nil}
print(table.getn(t)) --8
print(#t) --8
print(table.maxn(t)) --8

local t = {1,888,x=999,b=2,5,nil,6,7,[10]=1,8,{z = 1,y = 1},nil}
print(table.getn(t)) --3
print(#t) --3 
print(table.maxn(t)) --10

local t = {1,888,x=999,b=2,5,nil,6,7,[10]=1,8,{z = 1,y = 1}};
print(table.getn(t)) --8
print(#t) --8
print(table.maxn(t)) --10

========================================
local t = {1,3,nil,5,4,2,8}
print(table.getn(t)) --7
print(#t) --7
print(table.maxn(t)) --7

local t = {1,3,nil,5,4,2,8,nil}
print(table.getn(t)) --7
print(#t) --7
print(table.maxn(t)) --7

local t = {1,3,nil,5,4,2,8,nil,nil}
print(table.getn(t)) --7
print(#t) --7
print(table.maxn(t)) --7


table.getn(t)
等价于 #t
但是它计算的是数组元素。不包括hash键值。


#只计算array的元素个数，它实际上调用了对象的metatable 的__len函数。
对于有__len 方法的函数返回函数返回值。不然就返回数组成员数目